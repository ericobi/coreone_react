schema {
  query: Query
  mutation: Mutation
  subscription: Subscription
}

type CoreOneAssigned @aws_cognito_user_pools @aws_iam {
  client_id: String
  device_id: String!
  device_type: String!
  status_value: Int!
}

type CoreOneIncomingData @aws_cognito_user_pools @aws_iam {
  device_id: String!
  device_type: String!
  payload: AWSJSON!
  timestamp: AWSTimestamp!
}

type CoreOneOutgoingData @aws_cognito_user_pools @aws_iam {
  device_id: String!
  device_type: String!
  payload: AWSJSON!
  timestamp: AWSTimestamp!
}

type ModelCoreOneAssignedConnection @aws_cognito_user_pools @aws_iam {
  items: [CoreOneAssigned]
  nextToken: String
}

type ModelCoreOneIncomingDataConnection @aws_cognito_user_pools @aws_iam {
  items: [CoreOneIncomingData]
  nextToken: String
}

type ModelCoreOneOutgoingDataConnection @aws_cognito_user_pools @aws_iam {
  items: [CoreOneOutgoingData]
  nextToken: String
}

type Mutation {
  createCoreOneAssigned(condition: ModelCoreOneAssignedConditionInput, input: CreateCoreOneAssignedInput!): CoreOneAssigned @aws_cognito_user_pools @aws_iam
  createCoreOneIncomingData(condition: ModelCoreOneIncomingDataConditionInput, input: CreateCoreOneIncomingDataInput!): CoreOneIncomingData @aws_cognito_user_pools @aws_iam
  createCoreOneOutgoingData(condition: ModelCoreOneOutgoingDataConditionInput, input: CreateCoreOneOutgoingDataInput!): CoreOneOutgoingData @aws_cognito_user_pools @aws_iam
  deleteCoreOneAssigned(condition: ModelCoreOneAssignedConditionInput, input: DeleteCoreOneAssignedInput!): CoreOneAssigned @aws_cognito_user_pools @aws_iam
  deleteCoreOneIncomingData(condition: ModelCoreOneIncomingDataConditionInput, input: DeleteCoreOneIncomingDataInput!): CoreOneIncomingData @aws_cognito_user_pools @aws_iam
  deleteCoreOneOutgoingData(condition: ModelCoreOneOutgoingDataConditionInput, input: DeleteCoreOneOutgoingDataInput!): CoreOneOutgoingData @aws_cognito_user_pools @aws_iam
  updateCoreOne(device_id: String!, input: CoreOneDeviceDataInput!): CoreOneOutgoingData @aws_cognito_user_pools @aws_iam
  updateCoreOneAssigned(condition: ModelCoreOneAssignedConditionInput, input: UpdateCoreOneAssignedInput!): CoreOneAssigned @aws_cognito_user_pools @aws_iam
  updateCoreOneIncomingData(condition: ModelCoreOneIncomingDataConditionInput, input: UpdateCoreOneIncomingDataInput!): CoreOneIncomingData @aws_cognito_user_pools @aws_iam
  updateCoreOneOutgoingData(condition: ModelCoreOneOutgoingDataConditionInput, input: UpdateCoreOneOutgoingDataInput!): CoreOneOutgoingData @aws_cognito_user_pools @aws_iam
}

type Query {
  getCoreOneAssigned(id: ID!): CoreOneAssigned @aws_cognito_user_pools @aws_iam
  getCoreOneIncomingData(id: ID!): CoreOneIncomingData @aws_cognito_user_pools @aws_iam
  getCoreOneLatestData(device_id: String!): CoreOneIncomingData @aws_cognito_user_pools @aws_iam
  getCoreOneOutgoingData(id: ID!): CoreOneOutgoingData @aws_cognito_user_pools @aws_iam
  listCoreOne(client_id: String!): [CoreOneAssigned] @aws_cognito_user_pools @aws_iam
  listCoreOneAssigneds(filter: ModelCoreOneAssignedFilterInput, limit: Int, nextToken: String): ModelCoreOneAssignedConnection @aws_cognito_user_pools @aws_iam
  listCoreOneIncomingDatas(filter: ModelCoreOneIncomingDataFilterInput, limit: Int, nextToken: String): ModelCoreOneIncomingDataConnection @aws_cognito_user_pools @aws_iam
  listCoreOneOutgoingDatas(filter: ModelCoreOneOutgoingDataFilterInput, limit: Int, nextToken: String): ModelCoreOneOutgoingDataConnection @aws_cognito_user_pools @aws_iam
}

type Subscription {
  onUpdateCoreOneIncomingDataValue(device_id: String!): CoreOneIncomingData @aws_cognito_user_pools @aws_iam @aws_subscribe(mutations : ["createCoreOneIncomingData"])
  onUpdateCoreOneIncomingDataValues: CoreOneIncomingData @aws_cognito_user_pools @aws_iam @aws_subscribe(mutations : ["createCoreOneIncomingData"])
}

enum ModelAttributeTypes {
  _null
  binary
  binarySet
  bool
  list
  map
  number
  numberSet
  string
  stringSet
}

enum ModelSortDirection {
  ASC
  DESC
}

input CoreOneDeviceDataInput {
  payload: AWSJSON
  timestamp: AWSTimestamp!
}

input CreateCoreOneAssignedInput {
  client_id: String
  device_id: String!
  device_type: String!
  status_value: Int!
}

input CreateCoreOneIncomingDataInput {
  device_id: String!
  device_type: String!
  payload: AWSJSON!
  timestamp: AWSTimestamp!
}

input CreateCoreOneOutgoingDataInput {
  device_id: String!
  device_type: String!
  payload: AWSJSON!
  timestamp: AWSTimestamp!
}

input DeleteCoreOneAssignedInput {
  id: ID
}

input DeleteCoreOneIncomingDataInput {
  id: ID
}

input DeleteCoreOneOutgoingDataInput {
  id: ID
}

input ModelBooleanInput {
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  eq: Boolean
  ne: Boolean
}

input ModelCoreOneAssignedConditionInput {
  and: [ModelCoreOneAssignedConditionInput]
  client_id: ModelStringInput
  device_id: ModelStringInput
  device_type: ModelStringInput
  not: ModelCoreOneAssignedConditionInput
  or: [ModelCoreOneAssignedConditionInput]
  status_value: ModelIntInput
}

input ModelCoreOneAssignedFilterInput {
  and: [ModelCoreOneAssignedFilterInput]
  client_id: ModelStringInput
  device_id: ModelStringInput
  device_type: ModelStringInput
  not: ModelCoreOneAssignedFilterInput
  or: [ModelCoreOneAssignedFilterInput]
  status_value: ModelIntInput
}

input ModelCoreOneIncomingDataConditionInput {
  and: [ModelCoreOneIncomingDataConditionInput]
  device_id: ModelStringInput
  device_type: ModelStringInput
  not: ModelCoreOneIncomingDataConditionInput
  or: [ModelCoreOneIncomingDataConditionInput]
  payload: ModelStringInput
  timestamp: ModelIntInput
}

input ModelCoreOneIncomingDataFilterInput {
  and: [ModelCoreOneIncomingDataFilterInput]
  device_id: ModelStringInput
  device_type: ModelStringInput
  not: ModelCoreOneIncomingDataFilterInput
  or: [ModelCoreOneIncomingDataFilterInput]
  payload: ModelStringInput
  timestamp: ModelIntInput
}

input ModelCoreOneOutgoingDataConditionInput {
  and: [ModelCoreOneOutgoingDataConditionInput]
  device_id: ModelStringInput
  device_type: ModelStringInput
  not: ModelCoreOneOutgoingDataConditionInput
  or: [ModelCoreOneOutgoingDataConditionInput]
  payload: ModelStringInput
  timestamp: ModelIntInput
}

input ModelCoreOneOutgoingDataFilterInput {
  and: [ModelCoreOneOutgoingDataFilterInput]
  device_id: ModelStringInput
  device_type: ModelStringInput
  not: ModelCoreOneOutgoingDataFilterInput
  or: [ModelCoreOneOutgoingDataFilterInput]
  payload: ModelStringInput
  timestamp: ModelIntInput
}

input ModelFloatInput {
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  between: [Float]
  eq: Float
  ge: Float
  gt: Float
  le: Float
  lt: Float
  ne: Float
}

input ModelIDInput {
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  beginsWith: ID
  between: [ID]
  contains: ID
  eq: ID
  ge: ID
  gt: ID
  le: ID
  lt: ID
  ne: ID
  notContains: ID
  size: ModelSizeInput
}

input ModelIntInput {
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  between: [Int]
  eq: Int
  ge: Int
  gt: Int
  le: Int
  lt: Int
  ne: Int
}

input ModelSizeInput {
  between: [Int]
  eq: Int
  ge: Int
  gt: Int
  le: Int
  lt: Int
  ne: Int
}

input ModelStringInput {
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  beginsWith: String
  between: [String]
  contains: String
  eq: String
  ge: String
  gt: String
  le: String
  lt: String
  ne: String
  notContains: String
  size: ModelSizeInput
}

input UpdateCoreOneAssignedInput {
  client_id: String
  device_id: String
  device_type: String
  status_value: Int
}

input UpdateCoreOneIncomingDataInput {
  device_id: String
  device_type: String
  payload: AWSJSON
  timestamp: AWSTimestamp
}

input UpdateCoreOneOutgoingDataInput {
  device_id: String
  device_type: String
  payload: AWSJSON
  timestamp: AWSTimestamp
}
